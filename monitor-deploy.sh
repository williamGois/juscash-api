#!/bin/bash

# Script para monitorar o deploy em tempo real

EXPECTED_VERSION="1996a80"
API_URL="https://cron.juscash.app/api/simple/ping"
MAX_ATTEMPTS=40
INTERVAL=15

echo "üîç Monitorando deploy DR√ÅSTICO da vers√£o: $EXPECTED_VERSION"
echo "üåê URL: $API_URL"
echo "‚è±Ô∏è  Verificando a cada $INTERVAL segundos (deploy mais demorado)..."
echo ""

for i in $(seq 1 $MAX_ATTEMPTS); do
    echo -n "[$i/$MAX_ATTEMPTS] $(date '+%H:%M:%S') - "
    
    if RESPONSE=$(curl -f -s --max-time 15 "$API_URL" 2>/dev/null); then
        # Extrair vers√£o da resposta
        VERSION=$(echo "$RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin).get('version', 'unknown'))" 2>/dev/null || echo "unknown")
        
        if [ "$VERSION" = "$EXPECTED_VERSION" ]; then
            echo "‚úÖ SUCESSO! Vers√£o atualizada para: $VERSION"
            echo ""
            echo "üìã Resposta completa:"
            echo "$RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$RESPONSE"
            exit 0
        else
            echo "‚ö†Ô∏è  Vers√£o atual: $VERSION (esperado: $EXPECTED_VERSION)"
        fi
    else
        echo "‚ùå API n√£o est√° respondendo (normal durante rebuild dr√°stico)"
    fi
    
    if [ $i -lt $MAX_ATTEMPTS ]; then
        sleep $INTERVAL
    fi
done

echo ""
echo "‚è∞ Timeout atingido ap√≥s $((MAX_ATTEMPTS * INTERVAL)) segundos"
echo "üîç √öltima vers√£o detectada: $VERSION"

if [ "$VERSION" != "unknown" ] && [ "$VERSION" != "$EXPECTED_VERSION" ]; then
    echo "‚ö†Ô∏è  A API est√° respondendo, mas com vers√£o antiga"
    echo "üí° Poss√≠veis causas:"
    echo "   - Deploy ainda em andamento"
    echo "   - Erro no processo de build"
    echo "   - Cache do proxy reverso"
fi 