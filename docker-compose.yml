version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-juscash_db}
      POSTGRES_USER: ${POSTGRES_USER:-juscash}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-juscash123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-juscash} -d ${POSTGRES_DB:-juscash_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://juscash:juscash123@db:5432/juscash_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-development}
      - DJE_BASE_URL=${DJE_BASE_URL:-https://dje.tjsp.jus.br/cdje}
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["python", "run.py"]

  celery:
    build: .
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://juscash:juscash123@db:5432/juscash_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-development}
      - DJE_BASE_URL=${DJE_BASE_URL:-https://dje.tjsp.jus.br/cdje}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["celery", "-A", "celery_worker.celery", "worker", "--loglevel=info"]

  celery-beat:
    build: .
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://juscash:juscash123@db:5432/juscash_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-development}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - ./logs:/app/logs
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["python", "cron_schedule.py"]

  flower:
    build: .
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    ports:
      - "5555:5555"
    depends_on:
      - redis
    volumes:
      - .:/app
    command: ["celery", "-A", "celery_worker.celery", "flower", "--port=5555"]

volumes:
  postgres_data: 