#!/usr/bin/env python3

import os
import sys

def test_celery_config():
    """Testa se a configura√ß√£o do Celery est√° pegando a REDIS_URL corretamente"""
    
    print("üß™ Testando configura√ß√£o do Celery...")
    
    try:
        # Simular ambiente Railway
        os.environ['REDIS_URL'] = 'redis://default:password@redis.railway.internal:6379'
        os.environ['RAILWAY_ENVIRONMENT'] = 'production'
        
        from app import create_app, make_celery
        
        app = create_app('railway')
        celery = make_celery(app)
        
        print(f"‚úÖ App config REDIS_URL: {app.config.get('REDIS_URL')}")
        print(f"‚úÖ Celery broker_url: {celery.conf.broker_url}")
        print(f"‚úÖ Celery result_backend: {celery.conf.result_backend}")
        
        # Verificar se as URLs est√£o corretas
        if celery.conf.broker_url and celery.conf.result_backend:
            if str(celery.conf.broker_url) != 'None' and str(celery.conf.result_backend) != 'None':
                print("‚úÖ Configura√ß√£o do Celery est√° correta!")
                return True
            else:
                print("‚ùå URLs do Celery est√£o como None")
                return False
        else:
            print("‚ùå Configura√ß√£o do Celery n√£o foi definida")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        return False

def main():
    print("üîß Teste de Corre√ß√£o do Redis/Celery\n")
    
    if test_celery_config():
        print("\nüéâ Corre√ß√£o funcionou! O Celery deve funcionar no Railway agora.")
        print("\nüí° Pr√≥ximos passos:")
        print("1. Fa√ßa deploy da corre√ß√£o no Railway")
        print("2. Teste: curl https://sua-app.railway.app/api/scraping/debug")
        print("3. Verifique se broker_url e result_backend n√£o s√£o mais null")
        print("4. Teste o scraping: POST /api/scraping/extract")
    else:
        print("\n‚ùå Ainda h√° problemas na configura√ß√£o.")
        print("Verifique os logs acima para mais detalhes.")

if __name__ == "__main__":
    main() 