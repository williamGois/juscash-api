version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: juscash_db_prod
    restart: always
    environment:
      POSTGRES_DB: juscash_db
      POSTGRES_USER: juscash
      POSTGRES_PASSWORD: juscash123
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U juscash -d juscash_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512M
        reservations:
          cpus: '0.05'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: juscash_redis_prod
    restart: always
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: .
      dockerfile: Dockerfile.alternative
      cache_from:
        - python:3.11-slim
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: juscash_web:prod
    container_name: juscash_web_prod
    restart: always
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--timeout", "600", "--workers", "4", "--threads", "2", "--worker-class", "gthread", "--keep-alive", "120", "--graceful-timeout", "300", "run:app"]
    volumes:
      - ./VERSION:/app/VERSION:ro
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://juscash:juscash123@db:5432/juscash_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DISPLAY=:99
      - POSTGRES_DB=juscash_db
      - POSTGRES_USER=juscash
      - POSTGRES_PASSWORD=juscash123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/simple/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 768M
        reservations:
          cpus: '0.1'
          memory: 192M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /root/.cache
    env_file:
      - env.vps

  worker:
    build:
      context: .
      dockerfile: Dockerfile.alternative
    image: juscash_web:prod
    container_name: juscash_worker_prod
    restart: always
    command: ["celery", "-A", "celery_worker.celery", "worker", "-B", "--loglevel=info", "--concurrency=1"]
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://juscash:juscash123@db:5432/juscash_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DISPLAY=:99
      - POSTGRES_DB=juscash_db
      - POSTGRES_USER=juscash
      - POSTGRES_PASSWORD=juscash123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - juscash_network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /root/.cache
    env_file:
      - env.vps

  flower:
    build:
      context: .
      dockerfile: Dockerfile.alternative
    image: juscash_web:prod
    container_name: juscash_flower_prod
    restart: always
    command: ["celery", "-A", "celery_worker.celery", "flower", "--address=0.0.0.0", "--port=5555", "--basic_auth=admin:juscash2024"]
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "5555:5555"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://juscash:juscash123@db:5432/juscash_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DISPLAY=:99
      - POSTGRES_DB=juscash_db
      - POSTGRES_USER=juscash
      - POSTGRES_PASSWORD=juscash123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    working_dir: /app
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /root/.cache
    env_file:
      - env.vps

  # ================================================================================
  # MONITORAMENTO VISUAL - PORTAINER (Interface como Railway)
  # ================================================================================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: juscash_portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 32M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  # ================================================================================
  # MÃ‰TRICAS DE CONTAINERS - cAdvisor
  # ================================================================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: juscash_cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    privileged: true
    devices:
      - /dev/kmsg
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 32M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  portainer_data:
    driver: local

networks:
  juscash_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 