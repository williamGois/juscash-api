version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: juscash_db_prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=pt_BR.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: juscash_redis_prod
    restart: always
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - python:3.11-slim
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: juscash_web:prod
    container_name: juscash_web_prod
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=production
      - DJE_BASE_URL=${DJE_BASE_URL}
      - PYTHONUNBUFFERED=1
      - GUNICORN_CMD_ARGS="--workers=4 --threads=2 --worker-class=sync --worker-tmp-dir=/dev/shm --max-requests=1000 --max-requests-jitter=50"
    ports:
      - "127.0.0.1:5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./VERSION:/app/VERSION:ro
    networks:
      - juscash_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/simple/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/logs

  worker:
    image: juscash_web:prod
    container_name: juscash_worker_prod
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=production
      - DJE_BASE_URL=${DJE_BASE_URL}
      - PYTHONUNBUFFERED=1
      - C_FORCE_ROOT=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - juscash_network
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["celery", "-A", "celery_worker.celery", "worker", "-B", "--loglevel=info", "--concurrency=2", "--max-tasks-per-child=100"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  flower:
    image: juscash_web:prod
    container_name: juscash_flower_prod
    restart: always
    environment:
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONUNBUFFERED=1
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-juscash2024}
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    networks:
      - juscash_network
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["python", "flower-start.py"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  juscash_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 