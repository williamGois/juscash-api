name: Deploy to VPS

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: juscash-api
  DOCKER_TAG: ${{ github.sha }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short || true

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/juscash
          
          # 1. Backup do banco
          docker-compose exec -T db pg_dump -U juscash juscash_db > /tmp/backup_$(date +%Y%m%d_%H%M%S).sql 2>/dev/null || true
          
          # 2. Limpar conflitos Git
          git stash --include-untracked
          git clean -fd
          
          # 3. Atualizar código
          git fetch origin
          git reset --hard origin/${{ github.ref_name }}
          
          # 4. Rebuild e restart
          docker-compose down
          docker-compose build --no-cache
          docker-compose up -d
          
          # 5. Aplicar migrações
          sleep 10
          docker-compose exec -T web flask db upgrade || true
          
          # 6. Verificar se está rodando
          sleep 5
          curl -f http://localhost:5000/api/simple/ping || exit 1
          
          echo "✅ Deploy concluído com sucesso!" 